openapi: 3.0.1
info:
  title: Web Chat API
  description: API для чатов и аутентификации пользователей.
  version: 1.0.0

paths:
  /auth/register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user1
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        '400':
          description: Имя пользователя уже существует или данные неверны
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Username already exists or invalid data
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /auth/login:
    post:
      summary: Аутентификация пользователя и получение токена
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: user1
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Успешная аутентификация, возвращается токен
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: your-auth-token
        '401':
          description: Неправильный логин или пароль
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid username or password
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /api/chat:
    get:
      summary: Получение списка чатов пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Возвращает список чатов
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: string
                      example: user_name
        '401':
          description: Пользователь не аутентифицирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /api/chat/{user_name}:
    post:
      summary: Создание нового чата между двумя пользователями
      parameters:
        - name: user_name
          in: path
          required: true
          schema:
            type: string
            example: user_name2
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Чат успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Create chats successfully
        '400':
          description: Чат уже существует или user2_id не существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Chat already exists or invalid user
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /api/chat/messages/{user_name}:
    post:
      summary: Отправка сообщения в чат
      parameters:
        - name: user_name
          in: path
          required: true
          schema:
            type: string
            example: user_name
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Hello, how are you?
      responses:
        '201':
          description: Сообщение успешно отправлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
        '400':
          description: Некорректный запрос, например, если сообщение пустое или чат не существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message or chat not found
        '401':
          description: Пользователь не аутентифицирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /api/chats/messages/{user_name}:
    get:
      summary: Получение всех сообщений из чата
      parameters:
        - name: user_name
          in: path
          required: true
          schema:
            type: string
            example: user_name
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Возвращает список сообщений из чата
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      type: string
                      example: user_name
                    message:
                      type: string
                      example: Hello, how are you?
        '404':
          description: Чат не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Chat not found
        '401':
          description: Пользователь не аутентифицирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
